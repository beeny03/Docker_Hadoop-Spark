version: "3"


services:

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    restart: always
    ports:
      - 8443:8443
    environment:
      - NIFI_WEB_HTTP_PORT=8443
    volumes:
      - ./data_nifi:/opt/nifi/nifi-current/ls-target



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
            #- ./data_prometheus/config:/etc/prometheus
      - ./data_prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data_prometheus/data:/prometheus
    ports:
      - 9090:9090 
    command: 
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    networks:
      - statistic_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    # user: "$GRA_UID:$GRA_GID"
    ports:
      - 3000:3000
    volumes:
      -  ./data_grafana:/var/lib/grafana
    restart: always
    networks:
      - statistic_net


  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    restart: always
    ports:
      - "8180:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - statistic_net

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    restart: always
    depends_on:
      - spark-master
    ports:
      - "8181:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - statistic_net

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    restart: always
    depends_on:
      - spark-master
    ports:
      - "8182:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - statistic_net


  spark-historyr-server:
    image: bde2020/spark-history-server:3.3.0-hadoop3.3
    container_name: spark-history
    restart: always
    depends_on:
      - spark-master
    ports:
      - "18081:18081"
    volumes:
      - ./data_spark/events:/tmp/spark-events
    networks:
      - statistic_net

  telegraf:
    image: telegraf:1.25-alpine
    container_name: telegraf
    restart: always
    user: telegraf:998
    #depends_on:
    #  - influxdb
    volumes:
      - ./data_telegraf/conf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - statistic_net
      - infra_net


  zeppelin:
    image: apache/zeppelin:0.10.1
    container_name: zeppelin
    restart: always
    environment:
      SPARK_HOME: /opt/spark
      ZEPPELIN_LOG_DIR: /logs
    restart: always
    shm_size: "256MB"
    ports:
      - "8280:8080"
      - "4040:4040"
    volumes:
      - ./data_zeppelin/logs:/logs
      - ./data_zeppelin/notebook:/zeppelin/notebook
      - ./data_zeppelin/data:/data
      - ./data_zeppelin/spark:/opt/spark
    networks:
      - statistic_net



  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - ./data_hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./env/hadoop.env
    networks:
      - statistic_net
      

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - 9864:9864
    volumes:
      - ./data_hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./env/hadoop.env
    networks:
      - statistic_net
      

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - 8088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./env/hadoop.env
    networks:
      - statistic_net
      

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    ports:
      - 8042:8042
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./env/hadoop.env
    networks:
      - statistic_net
      

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    ports:
      - 8188:8188
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - ./data_hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./env/hadoop.env
    networks:
      - statistic_net



  hbase:

    image: dajobe/hbase

    container_name: hbase

    restart: always

    ports:

      - "16010:16010"

      - "8185:8085"

      - "9095:9095"

    networks:

      - statistic_net



networks:
  statistic_net:

  infra_net:
    driver: bridge




